.img-box{
    width: 400px;
    height: 250px;
    background-color: rgb(229, 120, 229);
}

.img-box img{
    width: 100%;
    height: 100%;
    cursor: pointer;
    border: 1px solid gold;
}

.img-box img:hover {
    /* transform */
    /* 1. skew : 기울이기 함수
        - skew(x_deg, y_deg), skewX(x_deg), skewY(y_deg)
    */

    transform: skewX(30deg);
    transform: skewY(30deg);
    transform: skew(30deg, 30deg);

    /* 2. scale : 크기 조절 함수
        - scale(숫자, 숫자), scaleX(배수), scaleY(배수)
    */

    transform: scaleX(2);
    transform: scaleY(0.7);
    transform: scale(1.5, 0.8);
    transform: scale(1.5);

    /* 3. translate : 이동 함수 */
    
    transform: translateX(-100px);
    transform: translateY(100px);
    transform: translate(100px, 50px);

    /* 4. rotate : 회전 함수 */

    transform: rotate(-45deg);
    /* perspective 사용해야 3d로 보임 */
    transform: perspective(200px) rotateX(45deg);
    transform: perspective(400px) rotateY(180deg);

    backface-visibility: visible;
    backface-visibility: hidden;

    transform: translateX(50px);
    transform: scaleX(1.2);
    /* 단축 속성 */
    /* transform: perspective() translate() scale() rotate() skew(); */
    transform: translateX(100px) scaleX(1.2);
}

.box{
    width: 100px;
    height: 100px;
    display: inline-block;
    background-color: beige;
}

.box1:hover{
    background-color: pink;
    height: 120px;
    width: 120px;

    /* transition-duration은 단축 속성 작성 시 필수 속성임 */
    transition-duration: 1s;
    transition-timing-function: ease;
    transition-delay: 2s;
    transition-property: background-color;
}

.box2:hover{
    background-color: aqua;
    transform: translateX(100px) scaleX(2);

    /* transition: property duration timing-function delay; */
    transition: transform 1s ease-in-out 2s;
}

/* 속성 적용 후 돌아올 때 자연스럽게 만들기 위해 이렇게 */
.box3{
    transition: .6s;
}
.box3:hover{
    opacity: 0;

    /* visibility, display 같은 속성값들이 중간값들을 가지지 않는 경우는 
        trainsition이 적용되지 않음 */
    /* visibility: hidden; */
}

/* 가운데 정렬 방법 */
.outer{
    width: 300px;
    height: 300px;
    background-color: aquamarine;
}

.outer .inner {
    width: 100px;
    height: 100px;
    background-color: pink;
}

/* 1. flex */
.outer1{
    display: flex;
    justify-content: center;
    align-items: center;
}

.outer1 > .inner{

}

/* 2. position, transform */
.outer2 {
    position: relative;
}

.outer2>.inner2 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* 3. position, margin:auto */
.outer3 {
    position: relative;
}

.outer3>.inner3 {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
}